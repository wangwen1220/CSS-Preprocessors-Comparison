/* color functions
rgb($red, $green, $blue)
rgba($red, $green, $blue, $alpha)
red($color)
green($color)
blue($color)
mix($color1, $color2, [$weight])
*/


/* hsl functions
hsl($hue, $saturation, $lightness)
hsla($hue, $saturation, $lightness, $alpha)
hue($color)
saturation($color)
lightness($color)
adjust-hue($color, $degrees)
lighten($color, $amount)
darken($color, $amount)
saturate($color, $amount)
desaturate($color, $amount)
grayscale($color)
complement($color)
*/


/* opacity functions
alpha($color) / opacity($color)
rgba($color, $alpha)
opacify($color, $amount) / fade-in($color, $amount)
transparentize($color, $amount) / fade-out($color, $amount)
*/


/* string functions
unquote($string)
quote($string)
str-length($string)
str-insert($string, $insert, $index)
str-index($string, $substring)
str-slice($string, $start-at, [$end-at])
to-upper-case($string)
to-lower-case($string)
*/


/* math functions
percentage($number)
round($number)
ceil($number)
floor($number)
abs($number)
min($numbers…)
max($numbers…)
random([$limit])
*/


/* list functions
length($list)
nth($list, $n)
join($list1, $list2, [$separator])
Joins together two lists into one.
append($list1, $val, [$separator])
zip($lists…)
index($list, $value)
list-separator(#list)
*/


/* introspection functions
feature-exists($feature)
variable-exists($name)
global-variable-exists($name)
function-exists($name)
mixin-exists($name)
inspect($value)
type-of($value)
unit($number)
unitless($number)
comparable($number1, $number2)
call($name, $args…)
*/


/* plugin function ❤️
module Sass::Script::Functions
  def reverse(string)
    assert_type string, :String
    Sass::Script::Value::String.new(string.value.reverse)
  end
  declare :reverse, [:string]
end
*/
